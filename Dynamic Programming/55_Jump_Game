class Solution(object):
    def canJump(self, nums):
        """
        :type nums: List[int]
        :rtype: bool
        """
        if len(nums) == 1:
            return True
        if nums[0] == 0:
            return False
        
        n = len(nums)
        dp = [False]*(n)
        dp[0] = True
        
        for i in range(n-1):
            if dp[i] == False:
                return False
            if nums[i] >= 1:
                for j in range(1, 1+nums[i]):
                    if i+j < n:
                        dp[i+j] = True
                if dp[n-1]:
                    return True
            
        return dp[n-1]

'''
Runtime: 4832 ms, faster than 9.48% of Python online submissions for Jump Game.
Memory Usage: 14.6 MB, less than 28.04% of Python online submissions for Jump Game.
'''