class Solution(object):
    def combinationSum4(self, nums, target):

        dp = [0] * (target+1) 
        dp[0] = 1

        for i in range(1, target+1): 
            for n in nums:
                if n <= i: 
                    dp[i] += dp[i-n] 

        return dp[-1]

'''
Runtime: 28 ms, faster than 69.87% of Python online submissions for Combination Sum IV.
Memory Usage: 13.5 MB, less than 62.19% of Python online submissions for Combination Sum IV.
'''

class Solution(object):
    def combinationSum4(self, nums, target):
        dp = {0:1}
        
        for total in range(1, target+1):
            dp[total] = 0
            for n in nums:
                dp[total] += dp.get(total-n, 0)
            
        return dp[target]
        
'''
Runtime: 40 ms, faster than 24.76% of Python online submissions for Combination Sum IV.
Memory Usage: 13.4 MB, less than 81.19% of Python online submissions for Combination Sum IV.
'''