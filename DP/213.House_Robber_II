class Solution {
public:
    int rob(vector<int>& nums) {
        if (nums.size() == 0)
            return 0;
        
        if (nums.size() == 1)
            return nums[0];
        
        int bf1 = 0;
        int bfbf1 = 0;
        int total1 = 0; 
        
        int bf2 = 0;
        int bfbf2 = 0;
        int total2 = 0;
        
        for (int i = 0;i < nums.size(); i++) {
            if (i == 0) {
                total1 = max(bfbf1 + nums[i], bf1);
                bfbf1 = bf1;
                bf1 = total1;
            } else if (i < nums.size() - 1) {
                total1 = max(bfbf1 + nums[i], bf1);
                bfbf1 = bf1;
                bf1 = total1;
                
                total2 = max(bfbf2 + nums[i], bf2);
               bfbf2 = bf2;
                bf2 = total2;
            } else {
                total2 = max(bfbf2 + nums[i], bf2);
                bfbf2 = bf2;
                bf2 = total2;
            }
        }
        
        return max(bf1, bf2);
    }
}; 


Runtime: 0 ms, faster than 100.00% of C++ online submissions for House Robber II.
Memory Usage: 7.6 MB, less than 97.04% of C++ online submissions for House Robber II.



