# Runtime: 36 ms, faster than 75.40% of Python3 online submissions for Generate Parentheses.
# Memory Usage: 14.5 MB, less than 67.81% of Python3 online submissions for Generate Parentheses.


class Solution:
    def rec(self,word,left,right,result):
        if left > 0: self.rec(word+"(",left-1,right+1,result)
        if right > 0: self.rec(word+")",left,right-1,result)
        if left == 0 and right == 0: result.append(word)
    
    def generateParenthesis(self, n: int) -> List[str]:
        result = []
        self.rec("",n,0,result)
        return result