class Solution {
public:
    int maxProduct(vector<int>& nums) {
        int num = nums.size();
        
        if (num == 0)
            return 0;
        else if (num == 1)
            return nums[0];
        
        int negMax = nums[0];
        int posMax = nums[0];
        int globalMax = nums[0];
        
        for (int i = 1; i < num; i++) {
            if (nums[i] < 0)
                swap(negMax, posMax);
            
            negMax = min(negMax * nums[i], nums[i]);
            posMax = max(posMax * nums[i], nums[i]);
            
            globalMax = max(posMax, globalMax);
        }
        
        return globalMax;
    }
};


Runtime: 4 ms, faster than 81.07% of C++ online submissions for Maximum Product Subarray.
Memory Usage: 11.6 MB, less than 99.67% of C++ online submissions for Maximum Product Subarray.
